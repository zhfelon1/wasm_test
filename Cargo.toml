[package]
name = "wasm_test"
version = "0.1.0"
authors = ["zhfelon1 <zhfelon@qq.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
iced = {package = "iced_web", version = "0.3.0"}

wasm-bindgen = "0.2.63"
log = "0.4.6"
wasm-logger = "0.2.0"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

#时间库 代替标准库的time
instant = { version = "0.1", features = [ "wasm-bindgen", "inaccurate" ] }

getrandom = { version = "0.2", features = ["js"] }
winit = {version = "0.25.0", features = ["serde", "web-sys"]}

egui_web = "0.17.0"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[dependencies.web-sys]
version = "0.3.53"
features = [
  'CanvasRenderingContext2d',
  'console',
  'Document',
  'Element',
  'EventTarget',
  'HtmlCanvasElement',
  'HtmlElement',
  'HtmlImageElement',
  'ImageData',
  'MouseEvent',
  'Node',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
  'Performance',
  'PerformanceTiming',
  'Window',
]

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
